spring.datasource.url=jdbc:postgresql://localhost/goapi
spring.datasource.username=postgres
spring.datasource.password=ps
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=validate

server.error.include-message=always
server.error.include-stacktrace=never

jwt.secret=BAD_SECRET
jwt.token.life.access=36000
jwt.token.life.refresh=7776000
jwt.token.name.refreshFiledName=refresh
jwt.token.name.accessCookieName=jwt
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.session.jdbc.initialize-schema=always
spring.session.jdbc.table-name=SPRING_SESSION

my.grpc.discover.address=static://localhost:9090
grpc.client.grpcHealthService.address=${my.grpc.discover.address}
grpc.client.ExternalDatabaseGrpcService.address=${my.grpc.discover.address}
grpc.client.ExternalDatabaseLocationGrpcService.address=${my.grpc.discover.address}
grpc.client.ExternalDatabaseGrpcService.negotiationType=PLAINTEXT
grpc.client.ExternalDatabaseLocationGrpcService.negotiationType=PLAINTEXT
grpc.client.grpcHealthService.negotiationType=PLAINTEXT

my.url.login=/login
my.url.logout=/logout
my.url.request.apiIdPathParamName=apiId
my.url.request.requestIdPathParamName=requestId
my.url.request.start=api/request/do
my.url.request=${my.url.request.start}/{${my.url.request.apiIdPathParamName}}/{${my.url.request.requestIdPathParamName}}

my.grpc.client.checkAlive=true
my.grpc.client.names.ExternalDatabaseGrpcService=com.discover.ExternalDatabaseService
my.grpc.client.names.ExternalDatabaseLocationGrpcService=com.discover.ExternalDatabaseServiceStats